version: '3'

networks:
  webapp:

services:

  nginx:
    image: nginx:stable-alpine
    container_name: ${APP_NAME}_nginx
    ports:
      - "8080:80"
    links:
      - php
    volumes:
      - ./:/var/www/html
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
      - ./docker/logs/nginx:/var/logs/nginx:rw
    depends_on:
      - php
      - database
    networks:
      - webapp

  php:
    build: 
      context: .
      dockerfile: Dockerfile
    container_name: ${APP_NAME}_php
    volumes:
      - ./:/var/www/html
    ports:
      - 9001:9000
    networks:
      - webapp

###> doctrine/doctrine-bundle ###
  database:
    image: mysql:${MYSQL_VERSION}
    container_name: ${APP_NAME}_mysql
    restart: unless-stopped
    ports:
      - 3036:3036
    environment:
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      # You should definitely change the password in production
      MYSQL_RANDOM_ROOT_PASSWORD: "true"
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_USER: ${MYSQL_USER}
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 5s
      retries: 5
      start_period: 60s
    volumes:
      - database_data:/var/lib/mysql:rw
      # You may use a bind-mounted host directory instead, so that it is harder to accidentally remove the volume and lose all your data!
      # - ./docker/db/data:/var/lib/mysql:rw
###< doctrine/doctrine-bundle ###

volumes:
###> doctrine/doctrine-bundle ###
  database_data:
###< doctrine/doctrine-bundle ###
